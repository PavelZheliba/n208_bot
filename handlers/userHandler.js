// handlers/userHandler.js
const bot = require('../bot');
const { Markup } = require('telegraf');
const ShopCategory = require('../models/ShopCategory');

async function sendMainMenu(ctx) {
    try {
        const categories = await ShopCategory.find({ 'product_nmIDs.0': { $exists: true } });
        const categoryButtons = categories.map(cat => Markup.button.callback(cat.name, `category:${cat.code}`));

        const staticButtons = [
            Markup.button.callback('üë• –ö–ª–∏–µ–Ω—Ç–∞–º', 'client_info'),
            Markup.button.callback('üìù –û–ø—Ä–æ—Å', 'start_survey')
        ];

        const allButtons = [...categoryButtons, ...staticButtons];
        const mainMenu = Markup.inlineKeyboard(allButtons, { columns: 2 });

        const welcomeMessage = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${ctx.from.first_name}!\n–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ?`;

        await ctx.replyWithPhoto(
            { source: './assets/full_logo.png' },
            {
                caption: welcomeMessage,
                ...mainMenu
            }
        );
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è ${ctx.from.username}:`, error);
        await ctx.reply('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /start.');
    }
}

function registerUserHandlers() {
    const menuHandler = async (ctx) => {
        if (ctx.scene) {
            await ctx.scene.leave();
        }
        // –£–±—Ä–∞–ª–∏ deleteMessage –æ—Ç—Å—é–¥–∞, —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ /menu
        await sendMainMenu(ctx);
    };

    bot.start(menuHandler);
    bot.command('menu', menuHandler);

    bot.action(/^category:(.+)$/, async (ctx) => {
        const categoryCode = ctx.match[1];
        await ctx.answerCbQuery();
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–î–ê–õ–ï–ù–û ---
        // await ctx.deleteMessage().catch(()=>{}); // –ë–æ–ª—å—à–µ –Ω–µ —É–¥–∞–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

        await ctx.reply('–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º');
        ctx.scene.enter('BROWSE_PRODUCTS_SCENE', { categoryCode: categoryCode });
    });

    bot.action('back_to_main_menu', async (ctx) => {
        await ctx.answerCbQuery();
        if (ctx.scene) {
            await ctx.scene.leave();
        }
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–î–ê–õ–ï–ù–û ---
        // await ctx.deleteMessage().catch(()=>{}); // –ë–æ–ª—å—à–µ –Ω–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        // if (ctx.scene && ctx.scene.state.mediaGridMessageId) { ... } // –ò –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—É —Ç–æ–∂–µ

        // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
        await sendMainMenu(ctx);
    });

    bot.action('client_info', async (ctx) => {
        await ctx.answerCbQuery('–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!');
    });

    bot.action('start_survey', async (ctx) => {
        await ctx.answerCbQuery('–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –æ–ø—Ä–æ—Å!');
    });

    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.');
}

module.exports = { registerUserHandlers };


// // handlers/userHandler.js
// const bot = require('../bot');
// const { Markup } = require('telegraf');
// const ShopCategory = require('../models/ShopCategory');
//
// async function sendMainMenu(ctx) {
//     try {
//         const categories = await ShopCategory.find({ 'product_nmIDs.0': { $exists: true } });
//         const categoryButtons = categories.map(cat => Markup.button.callback(cat.name, `category:${cat.code}`));
//
//         const staticButtons = [
//             Markup.button.callback('üë• –ö–ª–∏–µ–Ω—Ç–∞–º', 'client_info'),
//             Markup.button.callback('üìù –û–ø—Ä–æ—Å', 'start_survey')
//         ];
//
//         const allButtons = [...categoryButtons, ...staticButtons];
//         const mainMenu = Markup.inlineKeyboard(allButtons, { columns: 2 });
//
//         const welcomeMessage = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${ctx.from.first_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω.`;
//
//         await ctx.replyWithPhoto(
//             { source: './assets/full_logo.png' },
//             {
//                 caption: welcomeMessage,
//                 ...mainMenu
//             }
//         );
//     } catch (error) {
//         console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è ${ctx.from.username}:`, error);
//         await ctx.reply('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /start.');
//     }
// }
//
// function registerUserHandlers() {
//     const menuHandler = async (ctx) => {
//         if (ctx.scene) {
//             await ctx.scene.leave();
//         }
//         await ctx.deleteMessage().catch(()=>{});
//         await sendMainMenu(ctx);
//     };
//
//     bot.start(menuHandler);
//     bot.command('menu', menuHandler);
//
//     // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ ---
//     bot.action(/^category:(.+)$/, async (ctx) => {
//         const categoryCode = ctx.match[1];
//         await ctx.answerCbQuery();
//         await ctx.deleteMessage().catch(()=>{});
//
//         // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º"
//         await ctx.reply('–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º');
//
//         // –ê —É–∂–µ –ø–æ—Ç–æ–º –≤—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∂–µ—Ç —Ç–æ–≤–∞—Ä—ã
//         ctx.scene.enter('BROWSE_PRODUCTS_SCENE', { categoryCode: categoryCode });
//     });
//
//     bot.action('back_to_main_menu', async (ctx) => {
//         await ctx.answerCbQuery();
//         if (ctx.scene) {
//             await ctx.scene.leave();
//         }
//         // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–ø–æ–¥ —Å–µ—Ç–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤)
//         await ctx.deleteMessage().catch(()=>{});
//         // –£–¥–∞–ª—è–µ–º –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—É (—Å–∞–º—É —Å–µ—Ç–∫—É —Ç–æ–≤–∞—Ä–æ–≤)
//         if (ctx.scene && ctx.scene.state.mediaGridMessageId) {
//             await ctx.telegram.deleteMessage(ctx.chat.id, ctx.scene.state.mediaGridMessageId).catch(()=>{});
//         }
//         await sendMainMenu(ctx);
//     });
//
//     bot.action('client_info', async (ctx) => {
//         await ctx.answerCbQuery('–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!');
//     });
//
//     bot.action('start_survey', async (ctx) => {
//         await ctx.answerCbQuery('–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –æ–ø—Ä–æ—Å!');
//     });
//
//     console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.');
// }
//
// module.exports = { registerUserHandlers };
