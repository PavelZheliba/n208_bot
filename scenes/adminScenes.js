// scenes/adminScenes.js

const { Scenes, Markup } = require('telegraf');
const Cards = require('../models/Cards');
const ShopCategory = require('../models/ShopCategory');
const ShopProduct = require('../models/ShopProduct');

const deleteProductWizard = new Scenes.WizardScene(
    'DELETE_PRODUCT_WIZARD', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID

    // --- –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –∞—Ä—Ç–∏–∫—É–ª–∞ ---
    async (ctx) => {
        await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª (nmID) —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel');
        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 2: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –∏ –ø–æ–∫–∞–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É–¥–∞–ª–µ–Ω–∏—è ---
    async (ctx) => {
        if (!ctx.message || !ctx.message.text || ctx.message.text.toLowerCase() === '/cancel') {
            await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            return ctx.scene.leave();
        }

        const nmID = parseInt(ctx.message.text, 10);
        if (isNaN(nmID)) {
            await ctx.reply('–≠—Ç–æ –Ω–µ –∞—Ä—Ç–∏–∫—É–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /cancel');
            return;
        }

        // 1. –ò—â–µ–º —Ç–æ–≤–∞—Ä –≤ Cards –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ñ–æ—Ç–æ
        const product = await Cards.findOne({ nmID });
        if (!product) {
            await ctx.reply(`–¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${nmID} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.`);
            return ctx.scene.reenter();
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º nmID –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ü–µ–Ω—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        ctx.wizard.state.nmID = nmID;
        ctx.wizard.state.productTitle = product.title;

        // 2. –ò—â–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä
        const categories = await ShopCategory.find({ product_nmIDs: nmID });
        if (categories.length === 0) {
            await ctx.reply(`–¢–æ–≤–∞—Ä "${product.title}" –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π –∏–∑ –≤–∏—Ç—Ä–∏–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ —É–¥–∞–ª–µ–Ω.`);
            return ctx.scene.leave();
        }

        // 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —É–¥–∞–ª–µ–Ω–∏—è
        await ctx.reply(`–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä: "${product.title}".\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`);

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–∞–∂–¥–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const buttons = categories.map(cat =>
            Markup.button.callback(`‚ùå –ò–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${cat.name}"`, `delete_from_cat:${cat.code}`)
        );

        // –î–æ–±–∞–≤–ª—è–µ–º "–æ–ø–∞—Å–Ω—É—é" –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        buttons.push(Markup.button.callback('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –ü–û–õ–ù–û–°–¢–¨–Æ', 'delete_from_store'));

        const keyboard = Markup.inlineKeyboard(buttons, { columns: 1 }); // –ö–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        await ctx.reply('–ö—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è?', keyboard);

        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ ---
    async (ctx) => {
        if (!ctx.callbackQuery || !ctx.callbackQuery.data) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è.');
            return;
        }

        const data = ctx.callbackQuery.data;
        const nmID = ctx.wizard.state.nmID;
        const productTitle = ctx.wizard.state.productTitle;

        try {
            if (data.startsWith('delete_from_cat:')) {
                const categoryCode = data.split(':')[1];
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä $pull –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
                await ShopCategory.updateOne(
                    { code: categoryCode },
                    { $pull: { product_nmIDs: nmID } }
                );
                await ctx.editMessageText(`‚úÖ –¢–æ–≤–∞—Ä "${productTitle}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!`);

            } else if (data === 'delete_from_store') {
                // –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
                // 1. –£–¥–∞–ª—è–µ–º –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –≥–¥–µ –æ–Ω –µ—Å—Ç—å
                await ShopCategory.updateMany(
                    { product_nmIDs: nmID },
                    { $pull: { product_nmIDs: nmID } }
                );
                // 2. –£–¥–∞–ª—è–µ–º –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å —Ü–µ–Ω–∞–º–∏ –∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏
                await ShopProduct.deleteOne({ nmID: nmID });

                await ctx.editMessageText(`üóëÔ∏è –¢–æ–≤–∞—Ä "${productTitle}" –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞).`);
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', e);
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

        return ctx.scene.leave();
    }
);

const addProductWizard = new Scenes.WizardScene(
    'ADD_PRODUCT_WIZARD', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç—Ç–æ–π —Å—Ü–µ–Ω—ã

    // --- –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –∞—Ä—Ç–∏–∫—É–ª–∞ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ---
    async (ctx) => {
        try {
            await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª (nmID) —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel');
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É) –≤ —ç—Ç–æ–π —Å—Ü–µ–Ω–µ
            return ctx.wizard.next();
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ 1 —Å—Ü–µ–Ω—ã ADD_PRODUCT_WIZARD:", e);
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            return ctx.scene.leave(); // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        }
    },

    // --- –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ç–∏–∫—É–ª–∞ –∏ –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
    async (ctx) => {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (!ctx.message || !ctx.message.text) {
                // –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∏–∫–µ—Ä, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç
                await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—Ä—Ç–∏–∫—É–ª —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.');
                return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ, –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ —Å—Ü–µ–Ω—ã
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã
            if (ctx.message.text.toLowerCase() === '/cancel') {
                await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
                return ctx.scene.leave();
            }

            const nmID = parseInt(ctx.message.text, 10);
            if (isNaN(nmID)) {
                await ctx.reply('–í–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∞—Ä—Ç–∏–∫—É–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ /cancel');
                return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ
            }

            // –ò—â–µ–º —Ç–æ–≤–∞—Ä –≤ "—Å—ã—Ä–æ–π" –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Cards
            const product = await Cards.findOne({ nmID: nmID });
            if (!product) {
                await ctx.reply(`–¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${nmID} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /cancel.`);
                // ctx.scene.reenter() - —Ö–æ—Ä–æ—à–∏–π —Å–ø–æ—Å–æ–± –Ω–∞—á–∞—Ç—å —Å—Ü–µ–Ω—É –∑–∞–Ω–æ–≤–æ, –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –Ω–µ–µ
                return ctx.scene.reenter();
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–≤–æ–ª—à–µ–±–Ω–∏–∫–∞" (wizard state).
            // –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö —ç—Ç–æ–π –∂–µ —Å—Ü–µ–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            ctx.wizard.state.product = product;

            await ctx.reply('–û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω:');

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
            const photoUrl = (product.photos && product.photos.length > 0)
                ? product.photos[0].big
                : 'https://via.placeholder.com/150'; // URL-–∑–∞–≥–ª—É—à–∫–∞, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç

            const caption = `${product.title}\n\n–ë—Ä–µ–Ω–¥: ${product.brand}\n–ê—Ä—Ç–∏–∫—É–ª: ${product.nmID}`;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—É, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –æ–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç
            await ctx.replyWithPhoto(photoUrl, { caption });

            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏—Ç—Ä–∏–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–Ω–æ–ø–∫–∞—Ö
            const categories = await ShopCategory.find({});
            if (categories.length === 0) {
                await ctx.reply('–í –º–∞–≥–∞–∑–∏–Ω–µ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏—Ö –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∞ –∑–∞—Ç–µ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
                return ctx.scene.leave();
            }

            // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            const buttons = categories.map(cat =>
                Markup.button.callback(cat.name, `add_to_cat:${cat.code}`)
            );

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø–æ 2 –≤ —Ä—è–¥
            const keyboard = Markup.inlineKeyboard(buttons, { columns: 2 });

            await ctx.reply('–í –∫–∞–∫—É—é –≤–∏—Ç—Ä–∏–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?', keyboard);

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —à–∞–≥—É —Å—Ü–µ–Ω—ã
            return ctx.wizard.next();

        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ 2 —Å—Ü–µ–Ω—ã ADD_PRODUCT_WIZARD:", e);
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            return ctx.scene.leave();
        }
    },

    // --- –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ---
    async (ctx) => {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É (callback_query)
            if (!ctx.callbackQuery || !ctx.callbackQuery.data || !ctx.callbackQuery.data.startsWith('add_to_cat:')) {
                await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.');
                return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ, –æ–∂–∏–¥–∞—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            }

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'dresses' –∏–∑ 'add_to_cat:dresses')
            const categoryCode = ctx.callbackQuery.data.split(':')[1];
            // –î–æ—Å—Ç–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ
            const product_nmID = ctx.wizard.state.product.nmID;

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä $addToSet –≤ MongoDB.
            // –û–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ç–∞–º –µ—â–µ –Ω–µ—Ç.
            // –≠—Ç–æ –∑–∞—â–∏—â–∞–µ—Ç –Ω–∞—Å –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.
            const result = await ShopCategory.updateOne(
                { code: categoryCode },
                { $addToSet: { product_nmIDs: product_nmID } }
            );

            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
            if (result.modifiedCount > 0) {
                await ctx.editMessageText(`‚úÖ –¢–æ–≤–∞—Ä "${ctx.wizard.state.product.title}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!`);
            } else {
                // modifiedCount –±—É–¥–µ—Ç 0, –µ—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω (—Ç.–µ. —Ç–æ–≤–∞—Ä —É–∂–µ –±—ã–ª –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
                await ctx.editMessageText(`‚ÑπÔ∏è –¢–æ–≤–∞—Ä "${ctx.wizard.state.product.title}" —É–∂–µ –±—ã–ª –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.`);
            }

        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ 3 —Å—Ü–µ–Ω—ã ADD_PRODUCT_WIZARD:", e);
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.");
        } finally {
            // –í–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—Ö–∞ –∏–ª–∏ –æ—à–∏–±–∫–∏, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã
            return ctx.scene.leave();
        }
    }
);

const createCategoryWizard = new Scenes.WizardScene(
    'CREATE_CATEGORY_WIZARD',

    // --- –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
    async (ctx) => {
        await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–õ–µ—Ç–Ω–∏–µ –ø–ª–∞—Ç—å—è"). –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel');
        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –∑–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
    async (ctx) => {
        if (!ctx.message || !ctx.message.text || ctx.message.text.toLowerCase() === '/cancel') {
            await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            return ctx.scene.leave();
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ü–µ–Ω—ã
        ctx.wizard.state.categoryName = ctx.message.text;

        await ctx.reply(`–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ "–∫–æ–¥" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.\n\n–ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ –¥–µ—Ñ–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "letnie-platya" –∏–ª–∏ "sale-2024").\n\n–≠—Ç–æ—Ç –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –Ω–µ –≤–∏–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`);
        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞, –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ---
    async (ctx) => {
        if (!ctx.message || !ctx.message.text || ctx.message.text.toLowerCase() === '/cancel') {
            await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            return ctx.scene.leave();
        }

        const categoryCode = ctx.message.text.toLowerCase();

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–¥–∞
        const formatRegex = /^[a-z0-9-]+$/;
        if (!formatRegex.test(categoryCode)) {
            await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –¥–µ—Ñ–∏—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        const existingCategory = await ShopCategory.findOne({ code: categoryCode });
        if (existingCategory) {
            await ctx.reply('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –¥—Ä—É–≥–æ–π –∫–æ–¥.');
            return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ
        }

        try {
            // –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            const newCategory = new ShopCategory({
                name: ctx.wizard.state.categoryName,
                code: categoryCode,
                product_nmIDs: [] // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç–∞—è
            });
            await newCategory.save();

            await ctx.reply(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${newCategory.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', e);
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

        return ctx.scene.leave();
    }
);

// --- –ù–û–í–ê–Ø –°–¶–ï–ùA: –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
const viewCategoryWizard = new Scenes.WizardScene(
    'VIEW_CATEGORY_WIZARD', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID

    // --- –®–∞–≥ 1: –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ ---
    async (ctx) => {
        const categories = await ShopCategory.find({});
        if (categories.length === 0) {
            await ctx.reply('–í –º–∞–≥–∞–∑–∏–Ω–µ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.');
            return ctx.scene.leave();
        }

        const buttons = categories.map(cat =>
            Markup.button.callback(cat.name, `view_cat_products:${cat.code}`)
        );
        const keyboard = Markup.inlineKeyboard(buttons, { columns: 2 });

        await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:', keyboard);
        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 2: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ ---
    async (ctx) => {
        if (!ctx.callbackQuery || !ctx.callbackQuery.data.startsWith('view_cat_products:')) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.');
            return;
        }

        const categoryCode = ctx.callbackQuery.data.split(':')[1];

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const category = await ShopCategory.findOne({ code: categoryCode });
        if (!category || category.product_nmIDs.length === 0) {
            await ctx.editMessageText(`–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category.name}" –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.`);
            return ctx.scene.leave();
        }

        await ctx.editMessageText(`üîç –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category.name}"...`);

        const nmIDs = category.product_nmIDs;

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–¥–Ω–∏–º –º–∞—Ö–æ–º
        const cards = await Cards.find({ nmID: { $in: nmIDs } });
        const shopProducts = await ShopProduct.find({ nmID: { $in: nmIDs } });

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Map –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        const cardsMap = new Map(cards.map(c => [c.nmID, c]));
        const shopProductsMap = new Map(shopProducts.map(p => [p.nmID, p]));

        if (cardsMap.size === 0) {
            await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑—ã.');
            return ctx.scene.leave();
        }

        let response = `<b>–¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category.name}":</b>\n\n`;

        // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫
        for (const nmID of nmIDs) {
            const card = cardsMap.get(nmID);
            const shopProduct = shopProductsMap.get(nmID);

            if (!card) continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Cards

            const title = card.title;
            const priceInfo = shopProduct
                ? `${shopProduct.price} —Ä—É–±.`
                : '<b>‚ö†Ô∏è –¶–ï–ù–ê –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê</b>';

            response += `‚ñ™Ô∏è ${title}\n(<code>${nmID}</code>) - ${priceInfo}\n\n`;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
        // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π, –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ.
        await ctx.replyWithHTML(response);

        return ctx.scene.leave();
    }
);


// --- –ù–û–í–ê–Ø –°–¶–ï–ù–ê: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–º (—Ü–µ–Ω–∞ –∏ –Ω–∞–ª–∏—á–∏–µ) ---
const manageProductWizard = new Scenes.WizardScene(
    'MANAGE_PRODUCT_WIZARD', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID

    // --- –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –∞—Ä—Ç–∏–∫—É–ª–∞ ---
    async (ctx) => {
        await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª (nmID) —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel');
        return ctx.wizard.next();
    },

    // --- –®–∞–≥ 2: –û—Å–Ω–æ–≤–Ω–æ–π —Ö–∞–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ---
    // –≠—Ç–æ—Ç —à–∞–≥ —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π. –û–Ω –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∫–∞–∫ "–¥–∏—Å–ø–µ—Ç—á–µ—Ä".
    async (ctx) => {
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ –≤ —à–∞–≥, ctx.wizard.state –ø—É—Å—Ç. –ú—ã –±–µ—Ä–µ–º nmID –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.
        // –ï—Å–ª–∏ –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —à–∞–≥ –∏–∑ –¥—Ä—É–≥–æ–≥–æ, nmID —É–∂–µ –±—É–¥–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
        if (!ctx.wizard.state.nmID) {
            if (!ctx.message || !ctx.message.text || ctx.message.text.toLowerCase() === '/cancel') {
                await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
                return ctx.scene.leave();
            }
            const nmID = parseInt(ctx.message.text, 10);
            if (isNaN(nmID)) {
                await ctx.reply('–≠—Ç–æ –Ω–µ –∞—Ä—Ç–∏–∫—É–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                return ctx.scene.reenter();
            }
            ctx.wizard.state.nmID = nmID;
        }

        const nmID = ctx.wizard.state.nmID;

        // –ò—â–µ–º —Ç–æ–≤–∞—Ä –≤ –æ–±–µ–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
        const card = await Cards.findOne({ nmID });
        const shopProduct = await ShopProduct.findOne({ nmID });

        if (!card) {
            await ctx.reply(`–¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${nmID} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.`);
            return ctx.scene.leave();
        }

        // --- –°–¶–ï–ù–ê–†–ò–ô 1: –¢–æ–≤–∞—Ä –Ω–æ–≤—ã–π (–Ω–µ—Ç –≤ shop_products) ---
        if (!shopProduct) {
            await ctx.reply(`–¢–æ–≤–∞—Ä "${card.title}" –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω.\n\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –¥–ª—è –Ω–µ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4990), —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å. –î–ª—è –æ—Ç–º–µ–Ω—ã /cancel.`);
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
            return ctx.wizard.next();
        }

        // --- –°–¶–ï–ù–ê–†–ò–ô 2: –¢–æ–≤–∞—Ä —É–∂–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ ---
        ctx.wizard.state.card = card;
        ctx.wizard.state.shopProduct = shopProduct;

        // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è" —Ç–æ–≤–∞—Ä–æ–º
        const caption = `<b>${card.title}</b>\n\n<b>–¶–µ–Ω–∞:</b> ${shopProduct.price} —Ä—É–±.\n\n<b>–ù–∞–ª–∏—á–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤:</b>\n${shopProduct.sizes.map(s => `${s.isAvailable ? '‚úÖ' : '‚ùå'} ${s.techSize}`).join('\n')}`;

        const keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É', 'edit_price')],
            [Markup.button.callback('üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏', 'edit_sizes')],
            [Markup.button.callback('‚úÖ –ì–æ—Ç–æ–≤–æ', 'done')]
        ]);

        await ctx.replyWithHTML(caption, keyboard);
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏—è —ç—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫
        return ctx.wizard.selectStep(3); // –Ø–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ 4–π —à–∞–≥ (–∏–Ω–¥–µ–∫—Å 3)
    },

    // --- –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–∂–¥–µ–º —Ü–µ–Ω—É) ---
    async (ctx) => {
        const price = parseInt(ctx.message.text, 10);
        if (isNaN(price) || price <= 0) {
            await ctx.reply('–ù–µ–≤–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ /cancel');
            return; // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
        }

        const nmID = ctx.wizard.state.nmID;
        const card = await Cards.findOne({ nmID });

        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Cards
        const sizesFromCard = card.sizes.map(s => ({
            techSize: s.techSize,
            isAvailable: true // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏
        }));

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ shop_products
        await ShopProduct.create({
            nmID,
            price,
            sizes: sizesFromCard
        });

        await ctx.reply(`‚úÖ –¢–æ–≤–∞—Ä "${card.title}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω –ø–æ —Ü–µ–Ω–µ ${price} —Ä—É–±.`);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Ç–æ—Ä–æ–º—É —à–∞–≥—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        return ctx.wizard.selectStep(1); // –ò–Ω–¥–µ–∫—Å —à–∞–≥–∞ 2 - —ç—Ç–æ 1
    },

    // --- –®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ---
    async (ctx) => {
        if (!ctx.callbackQuery) return;
        const action = ctx.callbackQuery.data;
        await ctx.answerCbQuery();

        if (action === 'edit_price') {
            await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É:');
            return ctx.wizard.next(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ 5 –¥–ª—è –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
        }
        if (action === 'edit_sizes') {
            const { shopProduct } = ctx.wizard.state;
            const sizeButtons = shopProduct.sizes.map(s =>
                Markup.button.callback(`${s.isAvailable ? '‚úÖ' : '‚ùå'} ${s.techSize}`, `toggle_size:${s.techSize}`)
            );
            const keyboard = Markup.inlineKeyboard(sizeButtons, { columns: 3 });
            await ctx.editMessageText('–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä—ã, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏—Ö –Ω–∞–ª–∏—á–∏–µ. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ /admin.', keyboard);
            // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ–º –∂–µ —à–∞–≥–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —Ä–∞–∑–º–µ—Ä—ã
            return ctx.wizard.selectStep(5); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ 6 (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏)
        }
        if (action === 'done') {
            await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
            return ctx.scene.leave();
        }
    },

    // --- –®–∞–≥ 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —Ü–µ–Ω—ã ---
    async (ctx) => {
        const price = parseInt(ctx.message.text, 10);
        if (isNaN(price) || price <= 0) {
            await ctx.reply('–ù–µ–≤–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.');
            return;
        }

        const nmID = ctx.wizard.state.nmID;
        await ShopProduct.updateOne({ nmID }, { $set: { price: price } });
        await ctx.reply(`–¶–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ ${price} —Ä—É–±.`);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—à–∞–≥ 2)
        return ctx.wizard.selectStep(1);
    },

    // --- –®–∞–≥ 6: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏ ---
    async (ctx) => {
        if (!ctx.callbackQuery || !ctx.callbackQuery.data.startsWith('toggle_size:')) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.');
            return;
        }
        await ctx.answerCbQuery();
        const techSizeToToggle = ctx.callbackQuery.data.split(':')[1];
        const { nmID } = ctx.wizard.state;

        // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –∏ –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ isAvailable –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        // –≠—Ç–æ —Å–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å MongoDB, –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω–æ–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞
        const product = await ShopProduct.findOne({ nmID });
        const size = product.sizes.find(s => s.techSize === techSizeToToggle);
        await ShopProduct.updateOne(
            { nmID, "sizes.techSize": techSizeToToggle },
            { $set: { "sizes.$.isAvailable": !size.isAvailable } }
        );

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–Ω–∞ –ª–µ—Ç—É"
        const updatedProduct = await ShopProduct.findOne({ nmID }); // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const sizeButtons = updatedProduct.sizes.map(s =>
            Markup.button.callback(`${s.isAvailable ? '‚úÖ' : '‚ùå'} ${s.techSize}`, `toggle_size:${s.techSize}`)
        );
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ì–æ—Ç–æ–≤–æ" –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞
        sizeButtons.push(Markup.button.callback('‚úÖ –ì–æ—Ç–æ–≤–æ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏', 'sizes_done'));
        const keyboard = Markup.inlineKeyboard(sizeButtons, { columns: 3 });
        await ctx.editMessageReplyMarkup(keyboard.reply_markup);

        // –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ "–ì–æ—Ç–æ–≤–æ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω—ã–π —Ö–∞–±
        if (ctx.callbackQuery.data === 'sizes_done') {
            return ctx.wizard.selectStep(1);
        }
    }
);




module.exports = {
    addProductWizard,
    createCategoryWizard,
    deleteProductWizard,
    manageProductWizard,
    viewCategoryWizard,
};