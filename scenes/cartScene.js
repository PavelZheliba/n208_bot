// /scenes/cartScene.js
const { Scenes, Markup } = require('telegraf');
const Cart = require('../models/Cart');
const Cards = require('../models/Cards');
const ShopProduct = require('../models/ShopProduct');

const cartScene = new Scenes.BaseScene('CART_SCENE');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
async function showCart(ctx) {
    const telegramId = ctx.from.id;
    const cart = await Cart.findOne({ telegramId });

    if (!cart || cart.items.length === 0) {
        await ctx.reply('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.', Markup.inlineKeyboard([
            [Markup.button.callback('üóÇ –í –∫–∞—Ç–∞–ª–æ–≥', 'continue_shopping')]
        ]));
        return;
    }

    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ nmID –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –ë–î
    const nmIDs = cart.items.map(item => item.nmID);
    const productsInfo = await Cards.find({ nmID: { $in: nmIDs } });
    const shopProductsInfo = await ShopProduct.find({ nmID: { $in: nmIDs } });

    let message = 'üõí *–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:*\n\n';
    let totalPrice = 0;
    const buttons = [];

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏
    cart.items.forEach((item, index) => {
        const product = productsInfo.find(p => p.nmID === item.nmID);
        const shopProduct = shopProductsInfo.find(p => p.nmID === item.nmID);

        if (product && shopProduct) {
            const itemPrice = item.quantity * shopProduct.price;
            totalPrice += itemPrice;
            message += `${index + 1}\\. *${product.title}*\n`;
            message += `_–ê—Ä—Ç–∏–∫—É–ª: ${item.nmID}_\n`;
            message += `${item.quantity} —à—Ç\\. x ${shopProduct.price} —Ä—É–±\\. = *${itemPrice} —Ä—É–±\\.*\n\n`;

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
            buttons.push([Markup.button.callback(`‚ùå –£–¥–∞–ª–∏—Ç—å ${product.title.slice(0, 20)}...`, `remove_from_cart:${item.nmID}`)]);
        }
    });

    message += `*–ò—Ç–æ–≥–æ: ${totalPrice} —Ä—É–±\\.*`;

    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    buttons.push([Markup.button.callback('üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É', 'clear_cart')]);
    buttons.push([Markup.button.callback('üóÇ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏', 'continue_shopping')]);
    buttons.push([Markup.button.callback('‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', 'checkout')]);

    await ctx.replyWithMarkdownV2(message, Markup.inlineKeyboard(buttons));
}

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É
cartScene.enter(async (ctx) => {
    await showCart(ctx);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
cartScene.action(/^remove_from_cart:(\d+)$/, async (ctx) => {
    await ctx.answerCbQuery();
    const nmIDToRemove = parseInt(ctx.match[1], 10);
    const telegramId = ctx.from.id;
    await Cart.updateOne({ telegramId }, { $pull: { items: { nmID: nmIDToRemove } } });
    await ctx.deleteMessage(); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    return ctx.scene.reenter(); // –ü–µ—Ä–µ–∑–∞—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
cartScene.action('clear_cart', async (ctx) => {
    await ctx.answerCbQuery();
    const telegramId = ctx.from.id;
    await Cart.updateOne({ telegramId }, { $set: { items: [] } });
    await ctx.deleteMessage();
    return ctx.scene.reenter();
});

// –í—ã—Ö–æ–¥ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏)
cartScene.action('continue_shopping', async (ctx) => {
    await ctx.answerCbQuery();
    return ctx.scene.leave(); // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã, —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ 'back_to_main_menu'
});

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
cartScene.action('checkout', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.reply('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...');
    return ctx.scene.leave();
});

// –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å—Ü–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
cartScene.leave(async (ctx) => {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    const { showMainMenu } = require('../handlers/userHandler');
    await showMainMenu(ctx);
});

module.exports = { cartScene };
